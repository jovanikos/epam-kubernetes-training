---
apiVersion: v1
kind: Service
metadata:
  name: songs-db
  namespace: dev
spec:
  clusterIP: None
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: songs-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: songs-db
  namespace: dev
spec:
  serviceName: songs-db
  replicas: 1
  selector:
    matchLabels:
      app: songs-db
  template:
    metadata:
      labels:
        app: songs-db
    spec:
      containers:
        - name: songs-db
          image: postgres:17
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: songs-ms-config
                  key: SONGS_DB_PORT
          envFrom:
            - secretRef:
                name: songs-db-secret
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "exec pg_isready -h localhost -U postgres"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: songs-db-storage
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-scripts
          configMap:
            name: songs-ms-config
            items:
              - key: songs-init.sql
                path: 01-songs-init.sql
  volumeClaimTemplates:
    - metadata:
        name: songs-db-storage
      spec:
        storageClassName: hostpath
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: resources-db
  namespace: dev
spec:
  clusterIP: None
  ports:
    - port: 5433
      targetPort: 5433
  selector:
    app: resources-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resources-db
  namespace: dev
spec:
  serviceName: resources-db
  replicas: 1
  selector:
    matchLabels:
      app: resources-db
  template:
    metadata:
      labels:
        app: resources-db
    spec:
      containers:
        - name: resources-db
          image: postgres:17
          ports:
            - containerPort: 5433
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: resources-ms-config
                  key: RESOURCES_DB_PORT
          envFrom:
            - secretRef:
                name: resources-db-secret
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "exec pg_isready -h localhost -U postgres"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: resources-db-storage
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-scripts
          configMap:
            name: resources-ms-config
            items:
              - key: resources-init.sql
                path: 01-resources-init.sql
  volumeClaimTemplates:
    - metadata:
        name: resources-db-storage
      spec:
        storageClassName: hostpath
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
